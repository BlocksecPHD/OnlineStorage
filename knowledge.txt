Here are some knowledge: 
* There are three types of transactions: regular transactions, contract deployment transactions and execution of a contract.
* Nametags are important to understand the transaction. 
* If input data is not '0x' when `to` address is an EOA, it probably contains additional message. 
* Transfer could be invoked by CA(contract).
* In a swap there could be some intermedias different from the Router used.
* The asset in an approval is usually the token issued by the `to` contract address.
* In a vote counts of polls and options are equal. 
* Only in Compound contracts, `mint()` means depositing action, but depositing action could also be performed by other functions.
* The transaction where "ERC-20 TOKEN*" appears is probably related to a scam.


Here are some output format requirments: 
1. Append address abbreviations (eg. 0x1234...123456) after each name tag and enclose the address abbreviations in parentheses.
2. If it's likely a dapp service, you only need to recognize the service and tell the main components related to the object interacting with.
3. You must not mention gas and transaction fee unless they are higher than 0.01 ETH.
4. If there is a message in the input data, you should include it in the summary. 
5. NFT's name is after token id, you should include the name and token ids if related.
6. Append a label "fake token" enclosed in parentheses after "ERC-20 TOKEN*" in your summary.


Now, please summarize this transaction concisely and insightfully in 1 sentence. Then Remove any address, and replace it with corresponding abbreviation. For example, replace the address "0x0c66Db60fE32044C57e814B01400bc5b4eAe9CD2" with "0x0c66...9CD2". Remove any high decimal numbers, and replace it with its abbreviation. For example, replace the number "0.1561561894" with "0.156".

